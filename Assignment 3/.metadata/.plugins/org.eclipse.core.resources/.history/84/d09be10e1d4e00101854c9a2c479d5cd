package com.example.library;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import lombok.AllArgsConstructor;
import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

@RequestMapping("publisher")
@AllArgsConstructor
@RestController
public class PublisherController {

	@Autowired
    private PublisherService publisherService;

    @GetMapping
    public Flux<Publisher> getAllPublishers() {
        return publisherService.getAllPublishers();
    }

    @GetMapping("/{pubId}")
    public Mono<Publisher> getPublisherById(@PathVariable String pubId) {
        return publisherService.getById(pubId);
    }
    @PostMapping
    public Mono<Publisher> addPublisher(@RequestBody Publisher publisher) {
    	System.out.println("Received publisher: " + publisher);
        return publisherService.addPublisher(publisher);
    }


    @DeleteMapping("/{pubId}")
    public Mono<Void> deletePublisher(@PathVariable String pubId) {
        return publisherService.deletePublisher(pubId);
    }
}
